// import 'dart:async';
// import 'dart:math';
// import 'package:pocketbase/pocketbase.dart';

// final pb = PocketBase('http://127.0.0.1:8090');

// void main() async {
//   try {
//     // 1. Authenticate with PocketBase as a regular user
//     // (‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)
//   final authResult = await pb.collection('users').authWithPassword(
//     'chantima.ju.65@ubu.ac.th',
//     'Mod0625703684', // ‡πÉ‡∏ä‡πâ‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ
//   );
//     final adminEmail = authResult.record?.data['email'] ?? '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö';
//     print('‚úÖ ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡∏ï‡∏±‡∏ß‡∏ï‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à! ‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö: $adminEmail');

//     // 2. Clear existing records to avoid duplicates
//     print('‚è≥ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏à‡∏≤‡∏Å DssiShop...');
//     final existingRecords = await pb.collection('DssiShop').getFullList();
//     if (existingRecords.isNotEmpty) {
//       print('üóëÔ∏è ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° ${existingRecords.length} ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£...');
//       for (var record in existingRecords) {
//         await pb.collection('DssiShop').delete(record.id);
//       }
//       print('‚úÖ ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢‡πÅ‡∏•‡πâ‡∏ß');
//     } else {
//       print('‚ÑπÔ∏è ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏î‡∏¥‡∏° ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠...');
//     }

//     // 3. Generate and create 100 random products
//     final int numberOfProducts = 100;
//     final List<Future<RecordModel>> creationFutures = [];
    
//     print('üöÄ ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏° $numberOfProducts ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£...');

//     for (int i = 1; i <= numberOfProducts; i++) {
//       final product = _generateRandomProduct(i);
      
//       creationFutures.add(pb.collection('DssiShop').create(body: product));
//     }

//     // Wait for all product creation futures to complete
//     await Future.wait(creationFutures);

//     print('üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ú‡∏•‡∏¥‡∏ï‡∏†‡∏±‡∏ì‡∏ë‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏° $numberOfProducts ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à‡πÅ‡∏•‡πâ‡∏ß!');

//   } on ClientException catch (e) {
//     print('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏à‡∏≤‡∏Å PocketBase: ${e.response}');
//   } catch (e) {
//     print('‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏Ñ‡∏≤‡∏î‡∏Ñ‡∏¥‡∏î: $e');
//   }
// }

// Map<String, dynamic> _generateRandomProduct(int index) {
//   final random = Random();
//   final productName = '‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡∏™‡∏∏‡πà‡∏° ${index.toString().padLeft(3, '0')}';
//   final price = (random.nextInt(100) * 100) + 1000;
//   final imagePlaceholderId = random.nextInt(1000) + 1; // Example placeholder image
//   final imageUrl = 'https://picsum.photos/id/$imagePlaceholderId/300/300';

//   return {
//     'name': productName,
//     'price': price,
//     'imageURL': imageUrl,
//   };
// }

import 'dart:convert';
import 'dart:math';
import 'package:http/http.dart' as http;
import 'package:pocketbase/pocketbase.dart';
import 'package:faker/faker.dart';

Future<void> main() async {
  final pb = PocketBase('http://127.0.0.1:8090');
  final faker = Faker();
  final random = Random();

  try {
    // Authenticate as admin
    await pb.admins
        .authWithPassword('chantima.ju.65@ubu.ac.th', 'Mod0625703684');
    print('Connected as admin');
  } catch (e) {
    print('Failed to authenticate admin: $e');
    return;
  }

  for (int i = 0; i < 100; i++) {
    final name = faker.food.dish(); // ‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏≤‡∏´‡∏≤‡∏£‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
    final price = (random.nextDouble() * 500 + 50).toStringAsFixed(2);

    // ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API ‡∏à‡∏≤‡∏Å Foodish
    String imageUrl = '';
    try {
      final res = await http.get(Uri.parse('https://foodish-api.com/api/'));
      if (res.statusCode == 200) {
        final data = jsonDecode(res.body);
        imageUrl = data['image'];
      } else {
        imageUrl = 'https://via.placeholder.com/200'; // fallback
      }
    } catch (e) {
      imageUrl = 'https://via.placeholder.com/200'; // fallback
    }

    try {
      final record = await pb.collection('product').create(body: {
        'name': name,
        'price': double.parse(price),
        'imageUrl': imageUrl,
      });
      print('Created: ${record.id} - $name');
    } catch (e, st) {
      print('Error creating $name: $e');
      print(st);
    }
  }

  print('Finished generating 100 food products into PocketBase.');
}




